{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\Node_testing\\\\pusher_v1\\\\chat\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Pusher from 'pusher-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    const pusher = new Pusher('efc5c18caf9f89f8e460', {\n      cluster: 'mt1',\n      // habilita el logging en el desarrollo\n      logToConsole: true\n    });\n    const channel = pusher.subscribe('banana-666');\n    channel.bind('chat-event', data => {\n      setMessages(prevMessages => [...prevMessages, data]);\n    });\n\n    // Limpiar la suscripción cuando el componente se desmonta\n    return () => {\n      channel.unbind_all();\n      channel.unsubscribe();\n      pusher.disconnect();\n    };\n  }, []); // El array vacío asegura que useEffect solo se ejecute una vez\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: message.message\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Pusher","jsxDEV","_jsxDEV","App","_s","messages","setMessages","pusher","cluster","logToConsole","channel","subscribe","bind","data","prevMessages","unbind_all","unsubscribe","disconnect","children","map","message","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/laragon/www/Node_testing/pusher_v1/chat/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Pusher from 'pusher-js';\n\nconst App = () => {\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    const pusher = new Pusher('efc5c18caf9f89f8e460', {\n      cluster: 'mt1',\n      // habilita el logging en el desarrollo\n      logToConsole: true \n    });\n\n    const channel = pusher.subscribe('banana-666');\n\n    channel.bind('chat-event', (data) => {\n      setMessages(prevMessages => [...prevMessages, data]);\n    });\n\n    // Limpiar la suscripción cuando el componente se desmonta\n    return () => {\n      channel.unbind_all();\n      channel.unsubscribe();\n      pusher.disconnect();\n    }\n  }, []); // El array vacío asegura que useEffect solo se ejecute una vez\n\n  return (\n    <div>\n      {messages.map((message, index) => (\n        <div key={index}>{message.message}</div>\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMS,MAAM,GAAG,IAAIP,MAAM,CAAC,sBAAsB,EAAE;MAChDQ,OAAO,EAAE,KAAK;MACd;MACAC,YAAY,EAAE;IAChB,CAAC,CAAC;IAEF,MAAMC,OAAO,GAAGH,MAAM,CAACI,SAAS,CAAC,YAAY,CAAC;IAE9CD,OAAO,CAACE,IAAI,CAAC,YAAY,EAAGC,IAAI,IAAK;MACnCP,WAAW,CAACQ,YAAY,IAAI,CAAC,GAAGA,YAAY,EAAED,IAAI,CAAC,CAAC;IACtD,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACXH,OAAO,CAACK,UAAU,CAAC,CAAC;MACpBL,OAAO,CAACM,WAAW,CAAC,CAAC;MACrBT,MAAM,CAACU,UAAU,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEf,OAAA;IAAAgB,QAAA,EACGb,QAAQ,CAACc,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BnB,OAAA;MAAAgB,QAAA,EAAkBE,OAAO,CAACA;IAAO,GAAvBC,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAwB,CACxC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACrB,EAAA,CA/BID,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAiCT,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}